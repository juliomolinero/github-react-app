{"version":3,"sources":["components/AppHeader.js","components/SearchRepositories.js","components/ListRepositories.js","components/RepositoryDetails.js","components/Loading.js","components/RequestLimit.js","components/App.js","serviceWorker.js","index.js"],"names":["AppHeader","className","src","alt","Component","SearchRepositories","name","type","aria-label","placeholder","maxLength","onChange","e","props","handleChange","target","value","this","queryText","onClick","clickSearch","ListRepositories","pagination","paginationComponent","Pagination","size","Prev","url","prev","handlePagination","Next","next","scope","repositories","map","repo","key","id","owner","login","stargazers_count","href","full_name","showRepositoryDetails","totalCount","colSpan","RepositoryDetails","Modal","show","animation","Header","repository","Body","avatar_url","ListGroup","lastCommits","commit","Item","lastForkBy","userBiography","Footer","handleClose","Loading","showLoading","color","RequestLimit","showRequestLimit","handleCloseRequestLimit","App","showModal","setState","hideModal","showLoadingModal","hideLoadingModal","showRequestLimitModal","hideRequestLimitModal","state","apiPaginatedUrl","apiBaseUrl","lastCommitters","first","last","searchRepositories","bind","query","console","log","apiUrl","fetch","then","response","headers","get","Error","linkHeader","paginationLinks","parseLinkHeader","json","data","items","total_count","catch","err","finally","link","length","parts","split","links","forEach","p","section","replace","trim","bio","error","committersUrl","commits_url","maxCommitters","commiters","committer","push","forks_url","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qYAoBeA,G,mLAfP,OACI,4BAAQC,UAAU,cACd,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,0BAA0BC,IAAI,qBAAqBC,IAAI,YAE1E,yBAAKF,UAAU,sCACX,6D,GATAG,c,gBCuBTC,E,uKApBD,IAAD,OACL,OACI,yBAAKJ,UAAU,oBACX,yBAAKA,UAAU,eACX,2BAAOK,KAAK,YAAYC,KAAK,OAAON,UAAU,eAAeO,aAAW,sBAAsBC,YAAY,sBACtGC,UAAU,MACVC,SAAW,SAACC,GAAD,OAAO,EAAKC,MAAMC,aAAaF,EAAEG,OAAOC,QACnDA,MAAOC,KAAKJ,MAAMK,YAEtB,yBAAKjB,UAAU,sBACX,4BAAQA,UAAU,kBAAkBM,KAAK,SAASY,QAASF,KAAKJ,MAAMO,aACtE,kBAAC,IAAD,c,GAbShB,a,QC0DlBiB,G,6KAvDD,IAAD,OACDC,EAAaL,KAAKJ,MAAMS,WAGxBC,EACA,kBAACC,EAAA,EAAD,CAAYC,KAAK,KAAKxB,UAAU,0BAC5B,kBAACuB,EAAA,EAAWE,KAAZ,CAAiBC,IAAKL,EAAWM,KAAMT,QAAS,kBAAM,EAAKN,MAAMgB,iBAAiBP,EAAWM,QAA7F,SACA,kBAACJ,EAAA,EAAWM,KAAZ,CAAiBH,IAAKL,EAAWS,KAAMZ,QAAS,kBAAM,EAAKN,MAAMgB,iBAAiBP,EAAWS,QAA7F,UAIR,OACI,yBAAK9B,UAAU,oBACX,2BAAOA,UAAU,qBACjB,2BAAOA,UAAU,cACb,4BACA,wBAAI+B,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,aAGJ,+BACCf,KAAKJ,MAAMoB,aAAaC,KAAI,SAAAC,GAAI,OAC7B,wBAAIC,IAAKD,EAAKE,IACV,4BAAKF,EAAK7B,MACV,4BAAK6B,EAAKG,MAAMC,OAChB,4BAAI,kBAAC,IAAD,MAAJ,IAAgBJ,EAAKK,kBACrB,4BACI,uBAAGC,KAAMN,EAAKR,KAAMQ,EAAKO,YAE7B,4BACI,uBAAGD,KAAK,KACJtB,QAAS,kBAAM,EAAKN,MAAM8B,sBAAsBR,KADpD,iBAOXlB,KAAKJ,MAAM+B,WAAa,IACzB,+BACI,4BACI,wBAAIC,QAAQ,KACXtB,W,GA9CMnB,c,eCyChB0C,G,6KAtCP,OACI,kBAACC,EAAA,EAAD,CAAOC,KAAM/B,KAAKJ,MAAMmC,KAAMC,WAAW,EAAOxB,KAAK,MACjD,kBAACsB,EAAA,EAAMG,OAAP,CAAcjD,UAAU,0BAAyB,4BAAKgB,KAAKJ,MAAMsC,WAAW7C,OAC5E,kBAACyC,EAAA,EAAMK,KAAP,KACI,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SAASC,IAAKe,KAAKJ,MAAMsC,WAAWb,MAAMe,WAAYlD,IAAI,aAE7E,yBAAKF,UAAU,yBACX,6BACI,+BAAO,sDACP,kBAACqD,EAAA,EAAD,KACCrC,KAAKJ,MAAM0C,YAAYrB,KAAI,SAAAsB,GAAM,OAC9B,kBAACF,EAAA,EAAUG,KAAX,CAAgBrB,IAAKoB,EAAOnB,IAAKmB,EAAOjB,YAIhD,6BACA,2BACI,+BAAO,iEACP,8BAAOtB,KAAKJ,MAAM6C,aAEtB,6BACA,2BACI,+BAAO,0EACP,8BAAOzC,KAAKJ,MAAM8C,mBAKlC,kBAACZ,EAAA,EAAMa,OAAP,KACI,4BAAQ3D,UAAU,kBAAkBkB,QAASF,KAAKJ,MAAMgD,aAAxD,e,GAlCYzD,cCgBjB0D,E,uKAdP,OACI,kBAACf,EAAA,EAAD,CAAOC,KAAM/B,KAAKJ,MAAMkD,YAAad,WAAW,EAAOxB,KAAK,MACxD,kBAACsB,EAAA,EAAMG,OAAP,MACA,kBAACH,EAAA,EAAMK,KAAP,KACI,yBAAKnD,UAAU,WACX,kBAAC,IAAD,CAAY+D,MAAM,YADtB,yCAIJ,kBAACjB,EAAA,EAAMa,OAAP,W,GAXMxD,aC0BP6D,G,6KAvBP,OACI,kBAAClB,EAAA,EAAD,CAAOC,KAAM/B,KAAKJ,MAAMqD,iBAAkBjB,WAAW,EAAOxB,KAAK,MAC7D,kBAACsB,EAAA,EAAMG,OAAP,CAAcjD,UAAU,0BAAyB,2DACjD,kBAAC8C,EAAA,EAAMK,KAAP,KACI,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aAAaC,IAAI,YAAYC,IAAI,oCAEpD,yBAAKF,UAAU,sCACX,oIAMZ,kBAAC8C,EAAA,EAAMa,OAAP,KACI,4BAAQ3D,UAAU,kBAAkBkB,QAASF,KAAKJ,MAAMsD,yBAAxD,e,GAnBO/D,cC6PZgE,E,kDAtPb,aAAe,IAAD,8BACZ,gBA8MFC,UAAY,WACV,EAAKC,SAAS,CAAEtB,MAAM,KAhNV,EAkNduB,UAAY,WACV,EAAKD,SAAS,CAAEtB,MAAM,KAnNV,EAsNdwB,iBAAmB,WACjB,EAAKF,SAAS,CAAEP,aAAa,KAvNjB,EAyNdU,iBAAmB,WACjB,EAAKH,SAAS,CAAEP,aAAa,KA1NjB,EA6NdW,sBAAwB,WACtB,EAAKJ,SAAS,CAAEJ,kBAAkB,KA9NtB,EAgOdS,sBAAwB,WACtB,EAAKL,SAAS,CAAEJ,kBAAkB,KA/NlC,EAAKU,MAAQ,CAEXC,gBAAiB,GACjBC,WAAY,yFACZ5D,UAAW,GACXe,aAAc,GAEde,MAAM,EACNe,aAAa,EACbG,kBAAkB,EAElBP,cAAe,GACfD,WAAY,MACZqB,eAAgB,GAChB5B,WAAY,CACVd,GAAI,GACJ/B,KAAM,GACNgC,MAAO,IAGTM,WAAY,EACZtB,WAAY,CACV0D,MAAO,GACPC,KAAM,GACNlD,KAAM,GACNH,KAAM,KAGV,EAAKsD,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKrE,aAAe,EAAKA,aAAaqE,KAAlB,gBACpB,EAAKxC,sBAAwB,EAAKA,sBAAsBwC,KAA3B,gBAC7B,EAAKtD,iBAAmB,EAAKA,iBAAiBsD,KAAtB,gBAjCZ,E,yDAuCDC,GACXnE,KAAKqD,SAAS,CACVpD,UAAWkE,M,uCAQAzD,GAAM,IAAD,OACR,KAARA,EAIJV,KAAKqD,SAAS,CACZO,gBAAiBlD,IAChB,kBAAM,EAAKuD,wBALZG,QAAQC,IAAI,mB,2CAeM,IAAD,OAEnB,GAA6B,KAAzBrE,KAAK2D,MAAM1D,WAAmD,KAA/BD,KAAK2D,MAAMC,gBAA9C,CAGA5D,KAAKuD,mBACL,IAAIe,EAAyC,KAA/BtE,KAAK2D,MAAMC,gBAA0B5D,KAAK2D,MAAME,WAAa7D,KAAK2D,MAAM1D,UAAYD,KAAK2D,MAAMC,gBAE7GW,MAAMD,GACHE,MAAK,SAAAC,GAGF,GAAiC,IADFA,EAASC,QAAQC,IAAI,yBAGlD,MADA,EAAKlB,wBACC,IAAImB,MAAM,+BAGlB,IAAIC,EAAaJ,EAASC,QAAQC,IAAI,QAClCG,EAAkB,EAAKC,gBAAgBF,GAG7C,OAFE,EAAKxB,SAAS,CAAEhD,WAAYyE,IAEvBL,KAERD,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAS,GACF,EAAK5B,SAAS,CACZrC,aAAciE,EAAKC,MACnBvD,WAAYsD,EAAKE,iBAItBC,OAAM,SAAAC,GAAG,OAAIjB,QAAQC,IAAI,SAAWgB,MACpCC,SAAQ,kBAAM,EAAK9B,yB,sCAoBR+B,GACd,GAAoB,IAAhBA,EAAKC,OACP,MAAM,IAAIZ,MAAM,oCAIlB,IAAIa,EAAQF,EAAKG,MAAM,KACnBC,EAAQ,CACV5B,MAAO,GACPC,KAAM,GACNlD,KAAM,GACNH,KAAM,IAaR,OAVA8E,EAAMG,SAAS,SAAAC,GACb,IAAIC,EAAUD,EAAEH,MAAM,KACtB,GAAuB,IAAnBI,EAAQN,OACV,MAAM,IAAIZ,MAAM,qCAElB,IAAIlE,EAAMoF,EAAQ,GAAGC,QAAQ,SAAU,MAAMC,OACzC3G,EAAOyG,EAAQ,GAAGC,QAAQ,aAAc,MAAMC,OAClDL,EAAMtG,GAAQqB,KAGTiF,I,4CAOazE,GAAO,IAAD,OAC1BlB,KAAKqD,SAAS,CACZnB,WAAYhB,IAGdlB,KAAKuD,mBAGLgB,MAAMrD,EAAKG,MAAMX,KACd8D,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAS,GAAI,OACR,EAAK5B,SAAS,CACZX,cAAeuC,EAAKgB,SAGvBb,OAAM,SAAAc,GAAK,OAAI9B,QAAQC,IAAI,iCAAmC6B,MAGjE,IAAIC,EAAgBjF,EAAKkF,YAAYL,QAAQ,SAAU,IACvDxB,MAAM4B,GACD3B,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAS,GACF,IAAIoB,EAAgB,EAChBC,EAAY,GAChBrB,EAAKW,SAAQ,SAAAjG,GACW,IAAlB0G,IACJ1G,EAAE4G,UAAUnF,GAAKiF,EACjBC,EAAUE,KAAK7G,EAAE4G,WACjBF,QAEF,EAAKhD,SAAS,CAAES,eAAgBwC,OAEnClB,OAAM,SAAAc,GAAK,OAAI9B,QAAQC,IAAI,4BAA8B6B,MAG9D3B,MAAMrD,EAAKuF,WACRjC,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAS,GAAI,OACR,EAAK5B,SAAS,CACZZ,WAAYwC,EAAK,GAAG5D,MAAMC,WAG7B8D,OAAM,SAAAc,GAAK,OAAI9B,QAAQC,IAAI,4BAA8B6B,MACzDZ,SAAQ,WACP,EAAK9B,mBACL,EAAKJ,eAITpD,KAAKqD,SAAS,CACZX,cAAe,GACfD,WAAY,MACZqB,eAAgB,O,+BA6BlB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAoB7D,UAAWD,KAAK2D,MAAM1D,UAAWE,YAAaH,KAAKiE,mBAAoBpE,aAAcG,KAAKH,eAC9G,kBAAC,EAAD,CAAkBmB,aAAchB,KAAK2D,MAAM3C,aAAcU,sBAAuB1B,KAAK0B,sBACnFC,WAAY3B,KAAK2D,MAAMhC,WAAYtB,WAAYL,KAAK2D,MAAMtD,WAAYO,iBAAkBZ,KAAKY,mBAC/F,kBAAC,EAAD,CAAmBsB,WAAYlC,KAAK2D,MAAMzB,WAAYU,YAAa5C,KAAKsD,UAAWvB,KAAM/B,KAAK2D,MAAM5B,KAClGW,cAAe1C,KAAK2D,MAAMjB,cAAeD,WAAYzC,KAAK2D,MAAMlB,WAAYH,YAAatC,KAAK2D,MAAMG,iBAEtG,kBAAC,EAAD,CAAShB,YAAa9C,KAAK2D,MAAMb,cACjC,kBAAC,EAAD,CAAcG,iBAAkBjD,KAAK2D,MAAMV,iBAAkBC,wBAAyBlD,KAAK0D,6B,GAlPjFvE,aCGEuH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEdpC,OAAM,SAAAc,GACL9B,QAAQ8B,MAAMA,EAAMuB,c","file":"static/js/main.9d62890e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../css/AppHeader.css';\n\nclass AppHeader extends Component {\n    render() {\n        return (\n            <header className=\"app-header\">\n                <div className=\"container row\">\n                    <div className=\"col-md-3\">\n                        <img className=\"app-logo img-responsive\" src=\"./github_logo.jpeg\" alt=\"Github\" />\n                    </div>\n                    <div className=\"col-md-9 d-flex align-items-center\">\n                        <h2>GitHub Repository List</h2>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default AppHeader;","import React, { Component } from 'react';\nimport '../css/SearchRepositories.css';\nimport { FaSearch } from 'react-icons/fa';\n\nclass SearchRepositories extends Component {\n\n    render() {\n        return (\n            <div className=\"container top-20\">\n                <div className=\"input-group\">\n                    <input name=\"queryText\" type=\"text\" className=\"form-control\" aria-label=\"Search Repositories\" placeholder=\"Search Repositories\" \n                        maxLength=\"255\"\n                        onChange={ (e) => this.props.handleChange(e.target.value) }\n                        value={this.props.queryText} \n                    />\n                    <div className=\"input-group-append\">\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={this.props.clickSearch} >\n                        <FaSearch />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchRepositories;","import React, { Component } from 'react';\nimport { FaStar } from 'react-icons/fa';\nimport Pagination from 'react-bootstrap/Pagination';\nimport '../css/ListRepositories.css';\n\nclass ListRepositories extends Component {\n    \n    render() {\n        let pagination = this.props.pagination;\n        //console.log(pagination);\n        \n        let paginationComponent = (\n            <Pagination size=\"lg\" className=\"justify-content-center\">\n                <Pagination.Prev url={pagination.prev} onClick={() => this.props.handlePagination(pagination.prev)}> Prev</Pagination.Prev>\n                <Pagination.Next url={pagination.next} onClick={() => this.props.handlePagination(pagination.next)}> Next</Pagination.Next>\n            </Pagination>\n        );\n\n        return (\n            <div className=\"container top-30\">\n                <table className=\"table table-hover\">\n                <thead className=\"thead-dark\">\n                    <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Owner</th>\n                    <th scope=\"col\">Stars</th>\n                    <th scope=\"col\">Link</th>\n                    <th scope=\"col\">Details</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {this.props.repositories.map(repo => (\n                    <tr key={repo.id}>\n                        <td>{repo.name}</td>\n                        <td>{repo.owner.login}</td>\n                        <td><FaStar /> {repo.stargazers_count}</td>\n                        <td>\n                            <a href={repo.url}>{repo.full_name}</a>\n                        </td>\n                        <td>\n                            <a href=\"/#\"\n                                onClick={() => this.props.showRepositoryDetails(repo)}\n                            >Details</a>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n                {this.props.totalCount > 10 &&\n                <tfoot>\n                    <tr>\n                        <td colSpan=\"5\">\n                        {paginationComponent}\n                        </td>\n                    </tr>\n                </tfoot>\n                }\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default ListRepositories;","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport '../css/RepositoryDetails.css';\n\nclass RepositoryDetails extends Component {\n\n    render() {\n        return (\n            <Modal show={this.props.show} animation={false} size=\"lg\">\n                <Modal.Header className=\"justify-content-center\"><h3>{this.props.repository.name}</h3></Modal.Header>\n                <Modal.Body>\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n                            <img className=\"avatar\" src={this.props.repository.owner.avatar_url} alt=\"Profile\" />\n                        </div>\n                        <div className=\"col-md-10 div-wrapper\">\n                            <div>\n                                <label><b>Last 3 commits by:&nbsp;</b></label>\n                                <ListGroup>\n                                {this.props.lastCommits.map(commit => (\n                                    <ListGroup.Item key={commit.id}>{commit.login}</ListGroup.Item>\n                                ))}\n                                </ListGroup>\n                            </div>\n                            <hr/>\n                            <p>\n                                <label><b>The last fork was created by:&nbsp;</b></label>\n                                <span>{this.props.lastForkBy}</span>\n                            </p>\n                            <hr/>\n                            <p>\n                                <label><b>The owner has this in their biography:&nbsp;</b></label>\n                                <span>{this.props.userBiography}</span>\n                            </p>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"btn btn-primary\" onClick={this.props.handleClose}>Close</button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default RepositoryDetails;","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { FaDatabase } from 'react-icons/fa';\n\nclass Loading extends Component {\n\n    render() {\n        return (\n            <Modal show={this.props.showLoading} animation={false} size=\"md\">\n                <Modal.Header/>\n                <Modal.Body>\n                    <div className=\"message\">\n                        <FaDatabase color=\"#377bb5\"/>&nbsp;&nbsp;&nbsp;Loading, please wait ...\n                    </div>\n                </Modal.Body>\n                <Modal.Footer />\n            </Modal>\n        );\n    }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport '../css/RequestLimit.css';\n\nclass RequestLimit extends Component {\n\n    render() {\n        return (\n            <Modal show={this.props.showRequestLimit} animation={false} size=\"lg\">\n                <Modal.Header className=\"justify-content-center\"><h3>No more requests available</h3></Modal.Header>\n                <Modal.Body>\n                    <div className=\"row\">\n                        <div className=\"col-md-3\">\n                            <img className=\"sad-avatar\" src='./sad.png' alt=\"No more requests at the moment\" />\n                        </div>\n                        <div className=\"col-md-9 d-flex align-items-center\">\n                            <h5>\n                                Ouch!, it seems you have reached out the limit to perform requests, please try again in a minute.\n                            </h5>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"btn btn-primary\" onClick={this.props.handleCloseRequestLimit}>Close</button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default RequestLimit;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport AppHeader from './AppHeader';\nimport SearchRepositories from './SearchRepositories';\nimport ListRepositories from './ListRepositories';\nimport RepositoryDetails from './RepositoryDetails';\nimport Loading from './Loading';\nimport RequestLimit from './RequestLimit';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      // Search results functionality\n      apiPaginatedUrl: '',\n      apiBaseUrl: 'https://api.github.com/search/repositories?page=1&per_page=10&sort=stars&order=desc&q=',\n      queryText: '',\n      repositories: [],\n      // Modals\n      show: false,\n      showLoading: false,\n      showRequestLimit: false,\n      // Repository details\n      userBiography: '',\n      lastForkBy: 'N/A',\n      lastCommitters: [],\n      repository: {\n        id: '',\n        name: '',\n        owner: ''\n      },\n      // Pagination\n      totalCount: 0,\n      pagination: {\n        first: '',\n        last: '',\n        next: '',\n        prev: ''\n      }\n    };\n    this.searchRepositories = this.searchRepositories.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.showRepositoryDetails = this.showRepositoryDetails.bind(this);\n    this.handlePagination = this.handlePagination.bind(this);\n  }\n\n  /**\n   * Set query value to state\n  */\n  handleChange(query) {\n    this.setState({\n        queryText: query\n    }); \n  }\n\n  /**\n   * Everytime pagination buttons are clicked it needs to perform a new search\n   * @param { GitHub API URL } url \n   */\n  handlePagination(url) {\n    if (url === \"\") {\n      console.log(\"Nothing to do\");\n      return;\n    }\n    this.setState({\n      apiPaginatedUrl: url\n    }, () => this.searchRepositories());\n  }\n\n  /**\n   * Performs a search agains GitHub API based on the input query text field\n   * q: apache+language:scala\n   * page: current page number\n   * per_page: 10 max amount of reaults\n   * \n   */\n  searchRepositories() {\n    // Performs validation\n    if (this.state.queryText === \"\" && this.state.apiPaginatedUrl === \"\") {\n      return;\n    }\n    this.showLoadingModal();\n    let apiUrl = (this.state.apiPaginatedUrl === \"\") ? this.state.apiBaseUrl + this.state.queryText : this.state.apiPaginatedUrl;\n    //console.log(\"Searching ...\" + apiUrl);\n    fetch(apiUrl)\n      .then(response => {\n          // Check rate limit\n          let rateLimitRemainingHeader = response.headers.get('x-ratelimit-remaining');\n          if (rateLimitRemainingHeader === 0) {\n            this.showRequestLimitModal();\n            throw new Error(\"X-RateLimit-Limit exceeded!\");\n          }\n          // Grab link for pagination\n          let linkHeader = response.headers.get('link');\n          let paginationLinks = this.parseLinkHeader(linkHeader);\n          this.setState({ pagination: paginationLinks });\n        // Continue the process\n        return response;\n        })\n      .then(response => response.json())\n      .then(data => {\n          this.setState({\n            repositories: data.items,\n            totalCount: data.total_count\n          });\n          \n        })\n      .catch(err => console.log('Error ' + err))\n      .finally(() => this.hideLoadingModal());\n  }\n\n  /**\n   * Return a dictionary of links, useful for pagination \n   * @param { Link } link e.g. \n   * link: \n   * <https://api.github.com/search/repositories?page=4&per_page=10&sort=stars&order=desc&q=java>; rel=\"prev\", \n   * <https://api.github.com/search/repositories?page=6&per_page=10&sort=stars&order=desc&q=java>; rel=\"next\", \n   * <https://api.github.com/search/repositories?page=100&per_page=10&sort=stars&order=desc&q=java>; rel=\"last\", \n   * <https://api.github.com/search/repositories?page=1&per_page=10&sort=stars&order=desc&q=java>; rel=\"first\"\n   * \n   * @return e.g.\n   * {\n   * prev: \"https://api.github.com/search/repositories?page=4&per_page=10&sort=stars&order=desc&q=java\", \n   * next: \"https://api.github.com/search/repositories?page=6&per_page=10&sort=stars&order=desc&q=java\", \n   * last: \"https://api.github.com/search/repositories?page=100&per_page=10&sort=stars&order=desc&q=java\", \n   * first: \"https://api.github.com/search/repositories?page=1&per_page=10&sort=stars&order=desc&q=java\"\n   * }\n   */\n  parseLinkHeader(link) {\n    if (link.length === 0) {\n      throw new Error(\"input must not be of zero length\");\n    }\n  \n    // Split parts by comma\n    var parts = link.split(',');\n    var links = {\n      first: '',\n      last: '',\n      next: '',\n      prev: ''\n    };\n\n    parts.forEach( p => {\n      var section = p.split(';');\n      if (section.length !== 2) {\n        throw new Error(\"section could not be split on ';'\");\n      }\n      var url = section[0].replace(/<(.*)>/, '$1').trim();\n      var name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n      links[name] = url;\n    });\n    \n    return links;\n  }\n\n  /**\n   * Set repository to be displayed on modal\n   * @param { RepositoryDetails } repo \n   */\n  showRepositoryDetails(repo) {\n    this.setState({\n      repository: repo\n    });\n    // Displays loding\n    this.showLoadingModal();\n\n    // Get user biography\n    fetch(repo.owner.url)\n      .then(response => response.json())\n      .then(data => \n        this.setState({\n          userBiography: data.bio\n        })\n      )\n      .catch(error => console.log(\"Error fetching user biography \" + error));\n\n    // Get last 3 commiters\n    let committersUrl = repo.commits_url.replace(\"{/sha}\", \"\");\n    fetch(committersUrl)\n        .then(response => response.json())\n        .then(data => {\n            let maxCommitters = 0;\n            let commiters = [];\n            data.forEach(e => {\n              if (maxCommitters === 3) return;\n              e.committer.id = maxCommitters;\n              commiters.push(e.committer);\n              maxCommitters++;\n            });\n            this.setState({ lastCommitters: commiters });\n        })\n        .catch(error => console.log(\"Error fetching commiters \" + error));\n    \n    // Get last fork user\n    fetch(repo.forks_url)\n      .then(response => response.json())\n      .then(data => \n        this.setState({\n          lastForkBy: data[0].owner.login\n        })\n      )\n      .catch(error => console.log(\"Error fetching last fork \" + error))\n      .finally(() => {\n        this.hideLoadingModal();\n        this.showModal();\n      });\n\n    // Clear values\n    this.setState({\n      userBiography: '',\n      lastForkBy: 'N/A',\n      lastCommitters: []\n    });\n  }\n\n  // Modals functions -------------------->\n  // Repository details\n  showModal = () => {\n    this.setState({ show: true });\n  };\n  hideModal = () => {\n    this.setState({ show: false });\n  };\n  // Loading\n  showLoadingModal = () => {\n    this.setState({ showLoading: true });\n  };\n  hideLoadingModal = () => {\n    this.setState({ showLoading: false });\n  };\n  // Rate limit\n  showRequestLimitModal = () => {\n    this.setState({ showRequestLimit: true });\n  };\n  hideRequestLimitModal = () => {\n    this.setState({ showRequestLimit: false });\n  };\n  // Modals functions -------------------->\n\n  render() {\n    return (\n      <>\n        <AppHeader />\n        <SearchRepositories queryText={this.state.queryText} clickSearch={this.searchRepositories} handleChange={this.handleChange}/>\n        <ListRepositories repositories={this.state.repositories} showRepositoryDetails={this.showRepositoryDetails} \n          totalCount={this.state.totalCount} pagination={this.state.pagination} handlePagination={this.handlePagination} />\n        <RepositoryDetails repository={this.state.repository} handleClose={this.hideModal} show={this.state.show} \n          userBiography={this.state.userBiography} lastForkBy={this.state.lastForkBy} lastCommits={this.state.lastCommitters}\n          />\n        <Loading showLoading={this.state.showLoading} />\n        <RequestLimit showRequestLimit={this.state.showRequestLimit} handleCloseRequestLimit={this.hideRequestLimitModal}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery';\nimport 'popper.js/dist/umd/popper';\nimport 'bootstrap/dist/js/bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}